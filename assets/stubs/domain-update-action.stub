<?php

declare(strict_types=1);

namespace {{ namespace }};

use {{ preEventFqn }};
use {{ postEventFqn }};
use {{ exceptionFqn }};
use {{ modelFqn }};
use {{ repositoryInterfaceFqn }};
use {{ dtoFqn }};

class {{ className }}
{
    public function __construct(private {{ repositoryInterface }} $repository)
    {
    }

    /**
     * @throws {{ exceptionClass }}
     */
    public function execute({{ modelClass }} $model, {{ dtoClass }} $dto): {{ modelClass }}
    {
        event(new {{ preEventClass }}($model, $dto));

        $model = $this->repository->{{ repositoryAction }}($model, $dto);

        event(new {{ postEventClass }}($model, $dto));

        return $model;
    }
}y
