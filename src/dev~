#!/bin/bash -e

cd $(dirname "$0")/../../
COMPOSE="docker-compose -f docker/docker-compose.yml --project-directory ."

function app_up () {
    if [ -z $($COMPOSE ps -q app) ] || [ -z $(docker ps -q --no-trunc | grep $($COMPOSE ps -q app)) ]; then
        echo -e "\033[31;App container not up!\033[0m, Please run:"
        echo "./bin/dev up"
        exit 1
    fi
}

function deploy() {
  $COMPOSE exec -T app ./bin/build
  $COMPOSE exec -T app ./bin/post-deploy
}

case $1 in
up)
    $COMPOSE up --build -d
    ;;

init)
    if [ -d .git ]; then
        echo "This project is already initialized!"
        exit 1
    fi
    find ./storage -type d -print0 | xargs -0 chmod 777
    git init
    cp ./bin/git-hooks/* ./.git/hooks/
    chmod +x ./.git/hooks/*
    $COMPOSE up --build -d
    sleep 10s
    deploy
    ;;
deploy)
    app_up
    deploy
    ;;
down)
    app_up
    $COMPOSE down
    ;;

rm)
    $COMPOSE rm --stop --force
    ;;

logs)
    app_up
    $COMPOSE logs -f
    ;;

php-cli|b)
    app_up
    if [[ -z "${*:2}" ]]; then
        ARGS="bash"
    else
        ARGS=${*:2}
    fi

    $COMPOSE exec app $ARGS
    ;;

composer|c)
    app_up
    if [[ -z "${*:2}" ]]; then
       ARGS="update"
    else
       ARGS=${*:2}
    fi
    $COMPOSE exec app composer $ARGS
    ;;

artisan|a)
    app_up
    ARGS=""
    if [[ -n "${*:2}" ]]; then
        ARGS=${*:2}
    fi

    $COMPOSE exec app ./artisan $ARGS
    ;;

phpcs)
    app_up
    ARGS=""
    if [[ -n "${*:2}" ]]; then
        ARGS=${*:2}
    fi

    $COMPOSE exec app ./vendor/bin/phpcs $ARGS
    ;;

phpcbf)
    app_up
    ARGS=""
    if [[ -n "${*:2}" ]]; then
        ARGS=${*:2}
    fi

    $COMPOSE exec app ./vendor/bin/phpcbf $ARGS
    ;;

phpunit|t)
    app_up
    ARGS=""
    if [[ -n "${*:2}" ]]; then
        ARGS=${*:2}
    fi

    $COMPOSE exec app ./vendor/bin/phpunit $ARGS
    ;;

*)
    echo "Shortcuts to control development environment"
    echo "Usage: $0 [up|init|down|rm|logs|php-cli|artisan|phpcs|phpcbf|phpunit|composer]"
    ;;
esac
