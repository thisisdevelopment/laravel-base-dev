#!/bin/bash -e

cd $(dirname "$0")/../../
COMPOSE="docker-compose"
COMPOSE_EXEC="${COMPOSE} exec"

function app_up () {
    if [ -z $($COMPOSE ps -q app) ] || [ -z $(docker ps -q --no-trunc | grep $($COMPOSE ps -q app)) ]; then
        echo -e "\033[31;App container not up!\033[0m, Please run:"
        echo "./bin/dev up"
        exit 1
    fi
}

case $1 in
up)
    $COMPOSE up --build -d
    ;;

init)
    if [ -d .git ]; then
        echo "This project is already initialized!"
        exit 1
    fi
    git init
    cp ./bin/git-hooks/* ./.git/hooks/
    chmod +x ./.git/hooks/*
    $COMPOSE up --build -d
    sleep 10s
    $COMPOSE_EXEC -T app ./bin/build
    $COMPOSE_EXEC -T app ./bin/post-deploy
    $COMPOSE_EXEC -T app php artisan key:generate
    ;;
    
deploy)
    app_up
    deploy
    ;;
    
down)
    app_up
    $COMPOSE down
    ;;
    
rm)
    $COMPOSE rm --stop --force
    ;;

logs|l)
    app_up
    $COMPOSE logs -f
    ;;

shell|bash)
    app_up
    if [[ -z "${*:2}" ]]; then
        ARGS="bash"
    else
        ARGS=${*:2}
    fi

    $COMPOSE_EXEC app $ARGS
    ;;

composer|c)
    app_up
    if [[ -z "${*:2}" ]]; then
       ARGS="update"
    else
       ARGS=${*:2}
    fi
    $COMPOSE_EXEC app composer $ARGS
    ;;

artisan|a)
    app_up
    ARGS=""
    if [[ -n "${*:2}" ]]; then
        ARGS=${*:2}
    fi

    $COMPOSE_EXEC app ./artisan $ARGS
    ;;

phpcs|cs)
    app_up
    ARGS=""
    if [[ -n "${*:2}" ]]; then
        ARGS=${*:2}
    fi

    $COMPOSE_EXEC app ./vendor/bin/phpcs $ARGS
    ;;

phpcbf|cbf)
    app_up
    ARGS=""
    if [[ -n "${*:2}" ]]; then
        ARGS=${*:2}
    fi

    $COMPOSE_EXEC app ./vendor/bin/phpcbf $ARGS
    ;;
    
tinker|ti)
    app_up
    ARGS=""
    if [[ -n "${*:2}" ]]; then
        ARGS=${*:2}
    fi
    
    $COMPOSE_EXEC app ./artisan tinker $ARGS
    ;;
    
phpunit|test)
    app_up
    ARGS=""
    if [[ -n "${*:2}" ]]; then
        ARGS=${*:2}
    fi

    $COMPOSE_EXEC app ./vendor/bin/phpunit $ARGS
    ;;
    
php)
    app_up
    ARGS=""
    if [[ -n "${*:2}" ]]; then
        ARGS=${*:2}
    fi

    $COMPOSE_EXEC app php $ARGS
    ;;
    
*)
    echo "Shortcuts to control development environment"
    echo "Usage: $0 [up|init|down|rm|logs|shell|php|artisan|phpcs|phpcbf|phpunit|composer|tinker]"
    ;;
esac
